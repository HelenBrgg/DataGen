data:
  mode: seed_data #seed_data or dummy_data
  datapath: 'data'
  csvs: ["TS-PL-20_01.csv", "TS-PL-20_02.csv", "TS-PL-20_03.csv", "TS-PL-20_04.csv", "TS-PL-20_05.csv", "TS-PL-20_06.csv", "TS-PL-20_07.csv", "TS-PL-20_08.csv", "TS-PL-20_09.csv", "TS-PL-20_10.csv", "TS-PL-20_11.csv", "TS-PL-20_12.csv", "TS-PL-20_13.csv", "TS-PL-20_14.csv", "TS-PL-20_15.csv", "TS-PL-20_16.csv",
                                                      "TS-PL-20_17.csv", "TS-PL-20_18.csv", "TS-PL-20_19.csv", "TS-PL-20_20.csv", "TS-PL-20_21.csv", "TS-PL-20_22.csv", "TS-PL-20_22.csv", "TS-PL-20_23.csv", "TS-PL-20_24.csv", "TS-PL-20_25.csv", "TS-PL-20_26.csv", "TS-PL-20_27.csv", "TS-PL-20_28.csv", "TS-PL-20_29.csv", "TS-PL-20_30.csv", "TS-PL-20_31.csv", "TS-PL-20_32.csv", "TS-PL-21_01.csv", "TS-PL-21_02.csv", "TS-PL-21_03.csv", "TS-PL-21_04.csv", "TS-PL-21_05.csv", "TS-PL-21_06.csv", "TS-PL-21_07.csv", "TS-PL-21_08.csv", "TS-PL-21_09.csv", "TS-PL-21_10.csv", "TS-PL-21_11.csv", "TS-PL-21_12.csv", "TS-PL-21_13.csv", "TS-PL-21_14.csv", "TS-PL-21_15.csv", "TS-PL-21_16.csv",
                                                     "TS-PL-21_17.csv", "TS-PL-21_18.csv", "TS-PL-21_19.csv", "TS-PL-21_20.csv", "TS-PL-21_21.csv", "TS-PL-21_22.csv", "TS-PL-21_22.csv", "TS-PL-21_23.csv", "TS-PL-21_24.csv", "TS-PL-21_25.csv", "TS-PL-21_26.csv", "TS-PL-21_27.csv", "TS-PL-21_28.csv", "TS-PL-21_29.csv", "TS-PL-21_30.csv", "TS-PL-21_31.csv", "TS-PL-21_32.csv"]
   
  files: ['TS-PL-20']
  #,'TS-PL-21']
  dummy: [[1, 1, 1, 1, ], [2, 2, 2, 2,],[1, 8, 1, 1], [1, 3, 1, 5,], [3, 3, 3, 3,],[1, 1,2, 1,], [4, 4, 4, 4,], [2, 2, 2, 2,]]
extend: 
  path_output: "output_data"
  series_list:

    - series: 
      name: serie1
      standardizing:
        - standardization:   
          desired_mean: 2
          column : 2 #"Drahtvorschub"
      baseediting:
        stretching:
          factor: 1.5
        noising: 
          factor: 0.5
        concatenating:
          times: 2
        smoothing:
          factor: 2
      
      projections:
        - projection: projection1
          column: 1
          type: sine
          frequency: 0.0001 #for sine, around 0.0001
          factor: 3 #for random walk and sine, default is range of array.max()-array.min() 
        - projection: projection2
          column: 0
          type: random_walk
          frequency: #for sine, around 0.0001
          factor: #for random walk, default is range of array.max()-array.min()
      anomalies:
        - anomaly: anomaly1
          column: 1
          type: square
          position: 100000
          half_width: 5
          height_factor: 20
      generate:
        length: -3 #len(Smat[1])
        duration: 0 #len(Smat[1])
        start_position: -3
        distances: [10, 9, 8, 7, 6, 5, 4, 3, 2,
                 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        #distances: [20,19,18,17,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 4, 3, 2,
         #        1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,11,12,13,14,15,16,17,18,19,20]
        substance_vals : [1, .0, .5, 0, 0,0,0,0]
        distribution_vals: [0, 0.5, 0, 0,0,1,0,0]




  
